---
import { actions } from "astro:actions";
import { Image } from "astro:assets";
import AdminLayout from "../../layouts/AdminLayout.astro";
import noImage from "./../../assets/img/noImage.png";

if (!("user" in Astro.locals)) {
    return Astro.redirect("/admin/login");
}
const brands = await Astro.callAction(actions.allBrands, null);
const categories = await Astro.callAction(actions.allCategory, null);
const result = Astro.getActionResult(actions.addProduct);
console.log(result);
---

<AdminLayout title="Product">
    <main class="flex mx-20 py-12 gap-10">
        <!-- action='./product' -->
        <form
            action={actions.addProduct}
            method = "post"
            name="productImages"
            enctype="multipart/form-data"
            class="flex flex-col justify-center items-center gap-6"
        >
            <div class="flex">
                <div class="w-1/6 flex flex-col gap-6">
                    <div>
                        <Image
                            id="image1"
                            
                            class="bg-gray-100 rounded-xl border-2 border-gray-400"
                            src={noImage}
                            alt="noImage by category"
                        />
                        <label
                            class="flex justify-center items-center px-4 py-2 my-1 border-2 border-gray-400 rounded-xl cursor-pointer
                  hover:border-activeColor"
                        >
                            <span>Upload Pic</span>
                            <input type="file" name="image1" class="hidden" />
                        </label>
                    </div>
                    <div>
                        <Image
                            class="bg-gray-100 rounded-xl border-2 border-gray-400"
                            src={noImage}
                            alt="noImage by category"
                        />
                        <label
                            class="flex justify-center items-center px-4 py-2 my-1 border-2 border-gray-400 rounded-xl cursor-pointer
                  hover:border-activeColor"
                        >
                            <span>Upload Pic</span>
                            <input type="file" name="image2" class="hidden" />
                        </label>
                    </div>
                    <div>
                        <Image
                            class="bg-gray-100 rounded-xl border-2 border-gray-400"
                            src={noImage}
                            alt="noImage by category"
                        />
                        <label
                            class="flex justify-center items-center px-4 py-2 my-1 border-2 border-gray-400 rounded-xl cursor-pointer
                  hover:border-activeColor"
                        >
                            <span>Upload Pic</span>
                            <input type="file" name="image3" class="hidden" />
                        </label>
                    </div>
                </div>
                <div class="flex w-5/6 flex-col gap-10 mx-20">
                    <div class="flex gap-8">
                        <select
                            name="category"
                            id="category"
                            class="p-2 rounded-lg border-2 border-gray-500"
                        >
                            {
                                categories?.data ? (
                                    <option selected disabled value="">
                                        Select Category
                                    </option>
                                ) : (
                                    <option disabled selected value="">
                                        No Category
                                    </option>
                                )
                            }
                            {
                                categories?.data &&
                                categories?.data.map((category) => (
                                        <option value={category.id}>
                                            {category.name
                                                .charAt(0)
                                                .toUpperCase() +
                                                category.name.slice(1)}
                                        </option>
                                    ))
                            }
                        </select>
                        <select
                            name="brand"
                            id="brand"
                            class="p-2 rounded-lg border-2 border-gray-500"
                        >
                            {
                                brands?.data ? (
                                    <option selected disabled value="">
                                        Select Brand
                                    </option>
                                ) : (
                                    <option disabled selected value="">
                                        No Brands
                                    </option>
                                )
                            }
                            {
                                brands?.data &&
                                    brands?.data.map((brand) => (
                                        <option value={brand.id}>
                                            {brand.name
                                                .charAt(0)
                                                .toUpperCase() +
                                                brand.name.slice(1)}
                                        </option>
                                    ))
                            }
                        </select>
                    </div>
                    <input
                        type="text"
                        name="name"
                        placeholder="Product Name"
                        class="border-2 p-2 border-gray-400 focus:outline-none focus:border-activeColor"
                    />
                    <textarea
                        name="description"
                        placeholder="Product Description"
                        class="border-2 p-2 border-gray-400 focus:outline-none focus:border-activeColor"
                        class=""
                        cols="30"
                        rows="10"></textarea>
                    <div>
                                         </div>
                        <div>
                            <div id= 'specification' class="flex flex-col gap-6">
                                <div class="flex gap-10 justify-between items-center">
                                    <input
                                        class="border-2 p-2 border-gray-400 focus:outline-none focus:border-activeColor"
                                        type="text"
                                        name="spec"
                                        id="spec"
                                        placeholder="Specification"
                                    />
                                    <input
                                        class="border-2 p-2 border-gray-400 focus:outline-none focus:border-activeColor"
                                        type="text"
                                        name="spec-details"
                                        id="details"
                                        placeholder="Details"
                                    />
                                    <span>
                                    <svg
                                        class="ml-10 cursor-pointer"
                                        width="21"
                                        height="27"
                                        viewBox="0 0 21 27"
                                        fill="none"
                                        xmlns="http://www.w3.org/2000/svg"
                                    >
                                        <!-- <path
                                            d="M19.4733 4.03846H15.24V3.02885C15.24 2.22555 14.9724 1.45515 14.4961 0.887129C14.0197 0.31911 13.3736 0 12.7 0H7.62C6.94635 0 6.30029 0.31911 5.82395 0.887129C5.34761 1.45515 5.08 2.22555 5.08 3.02885V4.03846H0.846667C0.622117 4.03846 0.406764 4.14483 0.247983 4.33417C0.0892023 4.52351 0 4.78031 0 5.04808C0 5.31584 0.0892023 5.57264 0.247983 5.76198C0.406764 5.95132 0.622117 6.05769 0.846667 6.05769H1.69333V24.2308C1.69333 24.7663 1.87174 25.2799 2.1893 25.6586C2.50686 26.0373 2.93757 26.25 3.38667 26.25H16.9333C17.3824 26.25 17.8131 26.0373 18.1307 25.6586C18.4483 25.2799 18.6267 24.7663 18.6267 24.2308V6.05769H19.4733C19.6979 6.05769 19.9132 5.95132 20.072 5.76198C20.2308 5.57264 20.32 5.31584 20.32 5.04808C20.32 4.78031 20.2308 4.52351 20.072 4.33417C19.9132 4.14483 19.6979 4.03846 19.4733 4.03846ZM8.46667 19.1827C8.46667 19.4505 8.37746 19.7073 8.21868 19.8966C8.0599 20.0859 7.84455 20.1923 7.62 20.1923C7.39545 20.1923 7.1801 20.0859 7.02132 19.8966C6.86254 19.7073 6.77333 19.4505 6.77333 19.1827V11.1058C6.77333 10.838 6.86254 10.5812 7.02132 10.3919C7.1801 10.2025 7.39545 10.0962 7.62 10.0962C7.84455 10.0962 8.0599 10.2025 8.21868 10.3919C8.37746 10.5812 8.46667 10.838 8.46667 11.1058V19.1827ZM13.5467 19.1827C13.5467 19.4505 13.4575 19.7073 13.2987 19.8966C13.1399 20.0859 12.9245 20.1923 12.7 20.1923C12.4754 20.1923 12.2601 20.0859 12.1013 19.8966C11.9425 19.7073 11.8533 19.4505 11.8533 19.1827V11.1058C11.8533 10.838 11.9425 10.5812 12.1013 10.3919C12.2601 10.2025 12.4754 10.0962 12.7 10.0962C12.9245 10.0962 13.1399 10.2025 13.2987 10.3919C13.4575 10.5812 13.5467 10.838 13.5467 11.1058V19.1827ZM13.5467 4.03846H6.77333V3.02885C6.77333 2.76108 6.86254 2.50428 7.02132 2.31494C7.1801 2.1256 7.39545 2.01923 7.62 2.01923H12.7C12.9245 2.01923 13.1399 2.1256 13.2987 2.31494C13.4575 2.50428 13.5467 2.76108 13.5467 3.02885V4.03846Z"
                                            fill="#FF3333"></path> -->
                                    </svg>
                                </span>
                                </div>  
                            </div>
                            <button id="add-specification" class="px-10 py-2 w-9/12 my-6 rounded-lg border-2 border-activeColor">Add More Specification
                            </button>
                        </div>
                
                    </div>
                </div>
            </div>
            <div class="flex gap-20">
                <button
                    type="submit"
                    class="border-2 border-activeColor px-10 py-2"
                >
                    Save
                </button>
                <button type="reset" class="border-2 px-10 py-2">Reset</button>
            </div>
        </form>
    </main>
    <script>
        document.getElementById('add-specification').addEventListener('click', function(e) {
            e.preventDefault();
            const container = document.getElementById('specification');
            const element = document.createElement('div');
            element.className = 'flex gap-10 justify-between items-center';
            const specificationInput = document.createElement('input');
            specificationInput.type = 'text';
            specificationInput.name = 'spec';
            specificationInput.className = "border-2 p-2 border-gray-400 focus:outline-none focus:border-activeColor"
            specificationInput.placeholder = 'Specification';
            const attributeInput = document.createElement('input');
            attributeInput.name = 'spec-details';
            attributeInput.type = 'text';
            attributeInput.className = "border-2 p-2 border-gray-400 focus:outline-none focus:border-activeColor"
            attributeInput.placeholder = 'Details';
            const deleteButton = document.createElement('span');
            deleteButton.innerHTML =`<svg class="ml-10 cursor-pointer" width="21" height="27" viewBox="0 0 21 27" fill="none" xmlns="http://www.w3.org/2000/svg">
                                <path
                                    d="M19.4733 4.03846H15.24V3.02885C15.24 2.22555 14.9724 1.45515 14.4961 0.887129C14.0197 0.31911 13.3736 0 12.7 0H7.62C6.94635 0 6.30029 0.31911 5.82395 0.887129C5.34761 1.45515 5.08 2.22555 5.08 3.02885V4.03846H0.846667C0.622117 4.03846 0.406764 4.14483 0.247983 4.33417C0.0892023 4.52351 0 4.78031 0 5.04808C0 5.31584 0.0892023 5.57264 0.247983 5.76198C0.406764 5.95132 0.622117 6.05769 0.846667 6.05769H1.69333V24.2308C1.69333 24.7663 1.87174 25.2799 2.1893 25.6586C2.50686 26.0373 2.93757 26.25 3.38667 26.25H16.9333C17.3824 26.25 17.8131 26.0373 18.1307 25.6586C18.4483 25.2799 18.6267 24.7663 18.6267 24.2308V6.05769H19.4733C19.6979 6.05769 19.9132 5.95132 20.072 5.76198C20.2308 5.57264 20.32 5.31584 20.32 5.04808C20.32 4.78031 20.2308 4.52351 20.072 4.33417C19.9132 4.14483 19.6979 4.03846 19.4733 4.03846ZM8.46667 19.1827C8.46667 19.4505 8.37746 19.7073 8.21868 19.8966C8.0599 20.0859 7.84455 20.1923 7.62 20.1923C7.39545 20.1923 7.1801 20.0859 7.02132 19.8966C6.86254 19.7073 6.77333 19.4505 6.77333 19.1827V11.1058C6.77333 10.838 6.86254 10.5812 7.02132 10.3919C7.1801 10.2025 7.39545 10.0962 7.62 10.0962C7.84455 10.0962 8.0599 10.2025 8.21868 10.3919C8.37746 10.5812 8.46667 10.838 8.46667 11.1058V19.1827ZM13.5467 19.1827C13.5467 19.4505 13.4575 19.7073 13.2987 19.8966C13.1399 20.0859 12.9245 20.1923 12.7 20.1923C12.4754 20.1923 12.2601 20.0859 12.1013 19.8966C11.9425 19.7073 11.8533 19.4505 11.8533 19.1827V11.1058C11.8533 10.838 11.9425 10.5812 12.1013 10.3919C12.2601 10.2025 12.4754 10.0962 12.7 10.0962C12.9245 10.0962 13.1399 10.2025 13.2987 10.3919C13.4575 10.5812 13.5467 10.838 13.5467 11.1058V19.1827ZM13.5467 4.03846H6.77333V3.02885C6.77333 2.76108 6.86254 2.50428 7.02132 2.31494C7.1801 2.1256 7.39545 2.01923 7.62 2.01923H12.7C12.9245 2.01923 13.1399 2.1256 13.2987 2.31494C13.4575 2.50428 13.5467 2.76108 13.5467 3.02885V4.03846Z"
                                    fill="#FF3333">
                                </path>
                            </svg>`;
            deleteButton.addEventListener('click', function() {
            container.removeChild(element);
            });
            element.appendChild(specificationInput);
            element.appendChild(attributeInput);
            element.appendChild(deleteButton);
            container.appendChild(element);
        });
        // document.getElementById('add-specification').addEventListener('click', function(e) {
        //     e.preventDefault();
        //     const container = document.getElementById('elements-container');
        //     const element = document.createElement('div');
        //     element.className = 'element';
        //     const specificationInput = document.createElement('input');
        //     specificationInput.type = 'text';
        //     specificationInput.placeholder = 'Name';
        //     const attributeInput = document.createElement('input');
        //     attributeInput.type = 'text';
        //     attributeInput.placeholder = 'Value';
        //     const deleteButton = document.createElement('button');
        //     deleteButton.textContent = 'Delete';
        //     deleteButton.addEventListener('click', function() {
        //         container.removeChild(element);
        //     });
        //     element.appendChild(specificationInput);
        //     element.appendChild(attributeInput);
        //     element.appendChild(deleteButton);
        //     container.appendChild(element);
        // });
    </script>
</AdminLayout>